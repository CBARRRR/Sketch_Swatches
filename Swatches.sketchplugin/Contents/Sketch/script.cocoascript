@import "MochaJSDelegate.js";

var onRun = function(context) {



    // var doc = updateContext().doc;
    // var selection = updateContext().selection;
    // var initColor = updateContext().initColor ? updateContext().initColor : MSColor.colorWithRed_green_blue_alpha(1, 0, 0, 1);;

    // Main window
    var title = "Swatches";
    var identifier = "com.ashung.hung.swatches";
    var threadDictionary = NSThread.mainThread().threadDictionary();
    var swatches = threadDictionary[identifier] ? threadDictionary[identifier] : NSPanel.alloc().init();
    var windowWidth = 392,
        windowHeight = 503;
    swatches.setFrame_display(NSMakeRect(0, 0, windowWidth, windowHeight), true);
    swatches.setStyleMask(NSTexturedBackgroundWindowMask | NSTitledWindowMask | NSClosableWindowMask);
    swatches.setBackgroundColor(NSColor.whiteColor());
    swatches.standardWindowButton(NSWindowMiniaturizeButton).setHidden(true);
    swatches.standardWindowButton(NSWindowZoomButton).setHidden(true);
    swatches.setTitle(title);
    swatches.setTitlebarAppearsTransparent(true);
    swatches.becomeKeyWindow();
    swatches.setLevel(NSFloatingWindowLevel);
    threadDictionary[identifier] = swatches;
    COScript.currentCOScript().setShouldKeepAround_(true);

    // Add Web View to window
    var webView = WebView.alloc().initWithFrame(NSMakeRect(0, 0, windowWidth, windowHeight - 24));
    var windowObject = webView.windowScriptObject();
    var delegate = new MochaJSDelegate({
        "webView:didChangeLocationWithinPageForFrame:" : (function(webView, webFrame) {
            var locationHash = windowObject.evaluateWebScript("window.location.hash");
            log(locationHash);
        })
    });

    webView.setFrameLoadDelegate_(delegate.getClassInstance());
    webView.setMainFrameURL_(context.plugin.urlForResourceNamed("index.html").path());

    swatches.contentView().addSubview(webView);
    swatches.center();
    swatches.makeKeyAndOrderFront(nil);
};


function rgbaToMSColor(r, g, b, a) {
    var color = MSColor.alloc().init();
    color.setRed(r / 255);
    color.setGreen(g / 255);
    color.setBlue(b / 255);
    color.setAlpha(a / 100);
    return color;
}

function setFillColor(layer, color) {
    if (layer.class() == "MSShapeGroup") {
        var fills = layer.style().enabledFills();
        if (fills.count() > 0 && fills.lastObject().fillType() == 0) {
            fills.lastObject().setColor(color);
        } else {
            var fill = layer.style().addStylePartOfType(0);
            fill.setFillType(0);
            fills.lastObject().setColor(color);
        }
    }
    if (layer.class() == "MSTextLayer") {
        layer.setTextColor(color);
    }
}

function addColorToDocumentColors(context, mscolor) {
    var documentColors = context.document.documentData().assets().colors();
    documentColors.addObject(mscolor);
    context.document.showMessage("The color has been added to document colors.");
}
